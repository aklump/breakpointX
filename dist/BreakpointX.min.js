/**
 * BreakpointX JavaScript Module v0.1
 * 
 *
 * Define breakpoints and register callbacks when crossed.
 *
 * Copyright 2015, Aaron Klump <sourcecode@intheloftstudios.com>
 * @license Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Date: Mon Nov  2 13:35:11 PST 2015
 */
var BreakpointX=function($){function t(t,i){this.version="0.1",this.settings=$.extend({},this.options,i),this.init(t)}return t.prototype.options={},t.prototype.init=function(t){var i=this;if("object"!=typeof t)throw new Error("breakpoints should be an object in this format: {alias: width} where width is the maximum width of the viewport");i.aliases=[];for(var r in t)i.aliases.push(r),t[r]=parseInt(t[r],10);return i.breakpoints=t,i.reset(),i.last.alias=this.alias(window.innerWidth),i.last.width=this.value(i.last.alias),$(window).resize(function(){var t=window.innerWidth,r=t>i.last.width?"bigger":"smaller",n=[i.actions[r],i.actions.both],a=null;for(var e in n)for(var o in n[e]){var s=s||null;a=i.value(o);var l=i.last.width<a&&t>a||i.last.width>a&&a>t;if(l){var h="bigger"===r?s:o,u=o;for(var f in n[e][o])console.log(h,u,r),n[e][o][f](h,u,r,i);i.last={width:a,alias:o,direction:r}}s=o}}),i},t.prototype.reset=function(){return this.actions={bigger:[],smaller:[],both:[]},this.last={width:null,alias:null,direction:null},this},t.prototype.alias=function(t){var i;for(var r in this.breakpoints){if(i=i||r,t<this.breakpoints[r])return i;i=r}return i},t.prototype.value=function(t){return"undefined"==typeof this.breakpoints[t]?null:this.breakpoints[t]},t.prototype.add=function(t,i,r){var n=this;if("undefined"==typeof n.actions[t])throw new Error("Invalid direction: "+t);if(i.length<1)throw new Error("breakpoints must be an array with at least one alias.");if("function"!=typeof r)throw new Error("callback must be a function");for(var a in i){var e=i[a];if(-1===n.aliases.indexOf(e))throw new Error('Unregistered breakpoint alias: "'+e+'"');n.actions[t][e]=n.actions[t][e]||[],n.actions[t][e].push(r)}return this},t}(jQuery);