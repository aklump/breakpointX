/**
 * Breakpoint X (Crossing) jQuery Plugin v1.0
 * https://github.com/aklump/breakpointX#readme
 *
 * Define responsive breakpoints, which can fire JS callbacks; optionally apply CSS classes to designated elements.
 *
 * Copyright 2015-2018, Aaron Klump <sourcecode@intheloftstudios.com>
 *
 * @license Dual licensed under the MIT or GPL Version 3 licenses.
 *
 * Date: Sun Dec  9 11:02:44 PST 2018_string
 */
var window=window||{},BreakpointX=function(t){function e(t,e){var n=e===1/0?"ray":"segment",i=[];return"ray"===n?i.push(c+t):0===t?i.push(f+e):(i.push(c+t),i.push(f+e)),"("+i.join("px) and (")+"px)"}function n(t,e){return t-e}function i(t,e,n,i){s.call(this,g),s.call(this,u),s.call(this,i.name),r.call(this,t.name),e&&r.call(this,e)}function s(t){var e=this.settings.classPrefix+t;this.el.classList?this.el.classList.remove(e):this.el.className=el.className.replace(new RegExp("(^|\\b)"+e.split(" ").join("|")+"(\\b|$)","gi")," ")}function r(t){var e=this.settings.classPrefix+t;this.el.classList?this.el.classList.add(e):this.el.className+=" "+e}function o(t){t=t||{};for(var e=1;e<arguments.length;e++)if(arguments[e])for(var n in arguments[e])arguments[e].hasOwnProperty(n)&&(t[n]=arguments[e][n]);return t}function a(t){if(t===1/0)return!0;var e=parseInt(t,10);return e>=0&&e==t}function m(t){return"string"==typeof t&&t.indexOf("-width:")>=0}function h(t,e,n){var i=this.getSegment(e);if(!a(e))throw new Error('The provided breakpoint "'+e+'" is not recognized.');if(e!==i.from)throw new Error('You tried to add an action to an unregistered breakpoint "'+e+'"; you must use one of: '+this.breakpoints.join(", "));return this.actions[t][e]=this.actions[t][e]||[],this.actions[t][e].push(n),this}function l(e){this.el=null,this.version="1.0",this.segmentNames=[],this.breakpoints=[];var s={},r=this;if(e){if(r.breakpoints=e.slice().map(function(t){return parseInt(t,10)}).sort(n),0===r.breakpoints[0])throw new Error("You must not include a breakpoint of 0.")}else r.breakpoints=[];if(3===arguments.length?(s=o({},arguments[2]),r.segmentNames=arguments[1].slice()):2===arguments.length&&(arguments[1]instanceof Array?r.segmentNames=arguments[1].slice():(s=o({},arguments[1]),r.segmentNames=[])),r.segmentNames.length&&r.segmentNames.length-1!==r.breakpoints.length)throw new Error("You must have one more segment name than you have breakpoints; you need "+(r.breakpoints.length+1)+" segment names.");if(r.settings=o({},r.options,s),r.reset(),!r.segmentNames.length){var a=0;for(var m in r.breakpoints){var h=r.breakpoints[m];r.segmentNames.push(a+"-"+(h-1)),a=h}r.segmentNames.push(a+"-infinity")}r.settings.addClassesTo&&(r.el=this.settings.addClassesTo,r.addCrossAction(i).triggerActions());var l=null;return t.addEventListener("resize",function(){clearTimeout(l),l=setTimeout(function(){r.onWindowResize()},r.settings.resizeThrottle)}),r}var u="bigger",g="smaller",p="both",c="min-width:",f="max-width:",d={};return l.prototype.options={addClassesTo:null,classPrefix:"bpx-",resizeThrottle:250,breakpointRayImageWidthRatio:1.4},l.prototype.renameSegment=function(t,e){var n=this.getSegment(t),i=this.segmentNames.indexOf(n.name);return this.segmentNames[i]=e,this},l.prototype.addDevice=function(t,e){this.breakpoints.push(e),this.breakpoints=this.breakpoints.sort(n),"0-infinity"===this.segmentNames[0]&&(this.segmentNames[0]="0-"+(e-1));var i=this.breakpoints.indexOf(e);return this.segmentNames.splice(i+1,1,t),this},l.prototype.onWindowResize=function(t){var e=this,n=a(t)?t:this.getWindowWidth(),i=e.getSegment(n),s=d.segment,r=s.name&&i.name!==s.name,o=!1,m=null;if(s.name){if(r){o=o||[];var h=n>s.from?u:g;m=h===g?s.from:i.from;var l=Math.min(s.from,i.from),c=Math.max(s.from,i.from),f=[p,h];for(var v in f)for(var b in e.breakpoints){var k=e.breakpoints[b];k>=l&&c>=k&&e.actions[f[v]][k]&&(o["bp"+k]=e.actions[f[v]][k])}}}else{var y=e.getSegment(n);for(var w in e.actions)if(e.actions[w].length)for(var k in e.actions[w]){var N=e.getSegment(k).from,W=y.to+1===N,x=N===y.from,S=w===g&&W||w===u&&x||w===p&&(W||x);S&&(o=o||[],o["bp"+y.from]=e.actions[w][k])}}if(o)for(var k in o)for(var v in o[k])o[k][v].call(e,i,h,m,s);return(o||!d.segment.name)&&(d={breakpoint:m,direction:h,segment:i}),this},l.prototype.triggerActions=function(t){return d.segment=this.getSegment(null),this.onWindowResize(t)},l.prototype.getWindowWidth=function(){var e,n=t,i="inner";return"innerWidth"in t||(i="client",n=document.documentElement||document.body),e=n[i+"Width"]},l.prototype.reset=function(){return this.actions={bigger:[],smaller:[],both:[]},d={segment:this.getSegment(null),direction:null},this},l.prototype.getRay=function(){var t=this.segmentNames[this.segmentNames.length-1];return this.getSegment(t)},l.prototype.getSegment=function(t){var n=null;if(a(t))for(var i in this.breakpoints){var s=this.breakpoints[i];if(s>t){n=this.segmentNames[i];break}n=this.segmentNames[1*i+1]}else if(m(t)){var r=0,o=this.breakpoints.slice();o.push(1/0);for(var i in o){var s=this.breakpoints[i],h=s?s-1:1/0,l=e(r,h);if(l.replace(/ /g,"")===t.replace(/ /g,"")){n=this.segmentNames[i];break}r=s}}else n=t;var u={"@media":null,from:null,imageWidth:null,name:null,to:null,type:null,width:null},i=this.segmentNames.indexOf(n);if(n&&i>=0){var g=this.breakpoints[i-1]||null,p=this.breakpoints[i]||null;u.type=p?"segment":"ray",u.from=g||0,u.to=p?p-1:1/0,u["@media"]=e(u.from,u.to),u.imageWidth="segment"===u.type?u.to:Math.round(u.from*this.settings.breakpointRayImageWidthRatio),u.name=n,u.width=u.to}return u},l.prototype.getSegmentByWindow=function(){var t=this.getWindowWidth();return this.getSegment(t)},l.prototype.addCrossAction=function(t){for(var e in this.breakpoints)this.actions[p][this.breakpoints[e]]=this.actions[p][this.breakpoints[e]]||[],this.actions[p][this.breakpoints[e]].push(t);return this},l.prototype.addBreakpointCrossAction=function(t,e){return h.call(this,p,t,e)},l.prototype.addBreakpointCrossActionDecreasingOnly=function(t,e){return h.call(this,g,t,e)},l.prototype.addBreakpointCrossActionIncreasingOnly=function(t,e){return h.call(this,u,t,e)},l}(window);"object"==typeof module&&module.exports&&(module.exports=BreakpointX);