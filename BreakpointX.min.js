/**
 * BreakpointX JavaScript Module v0.2.5
 * 
 *
 * Define responsive breakpoints, register callbacks when crossing, with optional css class handling.
 *
 * Copyright 2015, Aaron Klump <sourcecode@intheloftstudios.com>
 * @license Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Date: Thu Nov 19 16:13:07 PST 2015
 */
var BreakpointX=function($){function t(t,s){this.version="0.2.5",this.settings=$.extend({},this.options,s),this.current=null,this.last={},this.actions={},this.breakpoints={},this.aliases=[],this.init(t)}return t.prototype.options={addClassesTo:null,classPrefix:"bpx-"},t.prototype.init=function(t){var s=this;if("object"!=typeof t)throw"Object needs format {alias: minWidth}.";s.aliases=[];var a=[],i,n,e,r;for(i in t)n=parseInt(t[i],10),a.push([i,n]);a.sort(function(t,s){return t[1]-s[1]});for(var o in a)o*=1,e=a[o][1],i=a[o][0],s.aliases.push(i),r="undefined"==typeof a[o+1]?null:a[o+1][1]-1,s.breakpoints[i]=[e,r];if(s.reset(),this.settings.addClassesTo&&s.add("both",this.aliases,this.cssHandler),s.actions.hasOwnProperty("bigger")||s.actions.hasOwnProperty("smaller")||s.actions.hasOwnProperty("both")){var l=window.innerWidth;s.callbacksHandler(l,!0),$(window).resize(function(){l=window.innerWidth,s.callbacksHandler(l)})}return s},t.prototype.cssHandler=function(t,s,a,i){var n=i.settings.addClassesTo instanceof jQuery?i.settings.addClassesTo:$(i.settings.addClassesTo),e=i.settings.classPrefix;n.removeClass(e+"smaller").removeClass(e+"larger").removeClass(e+t.name).addClass(e+s.name),a&&n.addClass(e+a)},t.prototype.callbacksHandler=function(t,s){var a=this,i=a.alias(t),n=i!==a.last.alias;if(n||s){var e=n?t>a.last.width[0]?"bigger":"smaller":null,r="smaller"===e?a.last.alias:i,o=[a.actions.both];e&&o.push(a.actions[e]),a.last={width:a.value(i),alias:i,direction:e},a.current=i;for(var l in o){var h={minWidth:a.breakpoints[a.last.alias][0],maxWidth:a.breakpoints[a.last.alias][1],name:a.last.alias},d={minWidth:a.breakpoints[i][0],maxWidth:a.breakpoints[i][1],name:i};for(var u in o[l][r])o[l][r][u](h,d,e,a)}}},t.prototype.reset=function(){return this.actions={bigger:[],smaller:[],both:[]},this.last={width:null,alias:null,direction:null},this.last.alias=this.alias(window.innerWidth),this.last.width=this.value(this.last.alias),this.current=this.last.alias,this},t.prototype.alias=function(t){var s;for(var a in this.breakpoints){var i=this.breakpoints[a][0];if(s=s||a,i>t)return s;s=a}return s},t.prototype.value=function(t){return"undefined"==typeof this.breakpoints[t]?null:this.breakpoints[t]},t.prototype.add=function(t,s,a){var i=this;if("undefined"==typeof i.actions[t])throw"Bad direction: "+t;if(0===s.length)throw"Breakpoints must be an array of aliases.";if("function"!=typeof a)throw"Callback must be a function";for(var n in s){var e=s[n];if(-1===i.aliases.indexOf(e))throw'Unknown alias: "'+e+'"';i.actions[t][e]=i.actions[t][e]||[],i.actions[t][e].push(a)}return this},t}(jQuery);