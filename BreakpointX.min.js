/**
 * BreakpointX JavaScript Module v0.1
 * 
 *
 * Define breakpoints and register callbacks when crossed.
 *
 * Copyright 2015, Aaron Klump <sourcecode@intheloftstudios.com>
 * @license Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Date: Thu Oct 29 17:46:04 PDT 2015
 */
var BreakpointX=function($){function t(t,i){this.version="0.1",this.settings=$.extend({},this.options,i),this.init(t)}return t.prototype.options={},t.prototype.init=function(t){var i=this;if("object"!=typeof t)throw new Error("breakpoints should be an object in this format: {alias: width}");i.aliases=[];for(var n in t)i.aliases.push(n),t[n]=parseInt(t[n],10);return i.lastWidth=window.innerWidth,i.breakpoints=t,i.reset(),$(window).resize(function(){var t=window.innerWidth,n=t>i.lastWidth?"bigger":"smaller",r=[i.actions[n],i.actions.both];for(var o in r)for(var e in r[o]){var a=i.value(e),s=i.lastWidth<a&&t>a||i.lastWidth>a&&a>t;if(s)for(var h in r[o][e])r[o][e][h](t,e,n,i)}i.lastWidth=t}),i},t.prototype.reset=function(){return this.actions={bigger:[],smaller:[],both:[]},this},t.prototype.value=function(t){return"undefined"==typeof this.breakpoints[t]?null:this.breakpoints[t]},t.prototype.add=function(t,i,n){var r=this;if("undefined"==typeof r.actions[t])throw new Error("Invalid direction: "+t);if(i.length<1)throw new Error("breakpoints must be an array with at least one alias.");if("function"!=typeof n)throw new Error("callback must be a function");for(var o in i){var e=i[o];if(-1===r.aliases.indexOf(e))throw new Error('Unregistered breakpoint alias: "'+e+'"');r.actions[t][e]=r.actions[t][e]||[],r.actions[t][e].push(n)}return this},t}(jQuery);